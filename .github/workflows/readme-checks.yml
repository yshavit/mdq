name: Documentation

on:
  push:
    branches: [ "main" ]
  workflow_dispatch: {}

env:
  CARGO_TERM_COLOR: always

jobs:
  check-msrv:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: find version mentioned in readme
      id: readme-version
      run: |
        set -euo pipefail
        pwd
        mkdir -p target/debug
        cargo build
        readme_version="$(cat README.md | ./target/debug/mdq '# Development | P: "Requires rustc >=" ' | awk '{print $NF}')"
        echo "result=$readme_version" >> "$GITHUB_OUTPUT"
    - name: pull cargo-msrv from docker hub
      run: docker pull foresterre/cargo-msrv
    - name: find minimum supported rust version
      id: run-msrv
      run: |
        set -euo pipefail
        min_version="$(docker run --rm -t -v "$PWD/":/app/ foresterre/cargo-msrv find --no-log --output-format minimal | tr -d $'\r\n')"
        echo "result=$min_version" >> "$GITHUB_OUTPUT"
    - name: compare versions
      run: |
        echo "::notice title=cargo-msrv::$MSRV_VERSION"
        echo "::notice title=README.md-msrv::$README_VERSION"
        if [[ "$MSRV_VERSION" != "$README_VERSION" ]]; then
          echo "::error title=msrv-mismatch::cargo-msrv was $MSRV_VERSION but README.md says rustc >= $README_VERSION"
          exit 1
        fi
      env:
        MSRV_VERSION: ${{ steps.run-msrv.outputs.result }}
        README_VERSION: ${{ steps.readme-version.outputs.result }}
