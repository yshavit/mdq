WHITESPACE = { " " | "\t" | "\r" | "\n" }

top = { SOI ~ string_to_pipe ~ EOI }

string_to_pipe = { anchor_start? ~ (quoted_string | unquoted_string_to_pipe) ~ anchor_end?}
string_to_paren = { anchor_start? ~ (quoted_string | unquoted_string_to_paren) ~ anchor_end?}
string_to_bracket = { anchor_start? ~ (quoted_string | unquoted_string_to_bracket) ~ anchor_end?}

// What I'd really want is to push a literal for the closing delimiter, and then do (!("|" | PEEK).
// But that's not possible (see GH pest-parser/pest#880), so this is the next best.
unquoted_string_to_pipe = @{ASCII_ALPHA ~ (!("|" | "$") ~ ANY)*  }
unquoted_string_to_paren = @{ASCII_ALPHA ~ (!("|" | ")") ~ ANY)*  }
unquoted_string_to_bracket = @{ASCII_ALPHA ~ (!("|" | "]") ~ ANY)*  }

quoted_string = ${ PUSH("'" | "\"") ~ quoted_char* ~ POP }

quoted_char = ${
 ! (PEEK | "\\") ~ literal_char
 | ("\\" ~ (escaped_char | "u{" ~ unicode_seq ~ "}"))
}

anchor_start = @{ "^" }

anchor_end = @{ "$" }

literal_char = @{ ANY }

escaped_char = @{("\"" | "'" | "`" | "\\" | "n" | "r" | "t"  )}

unicode_seq = @{ ASCII_HEX_DIGIT{1,6} }